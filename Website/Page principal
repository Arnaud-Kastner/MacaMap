<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather Map</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }

        #map {
            height: 600px;
            width: 100%;
        }

        .search-container {
            position: absolute;
            top: 20px;
            left: 20px;
            z-index: 1;
        }

        .search-bar {
            padding: 10px;
            font-size: 16px;
            width: 300px;
            border: 2px solid #ccc;
            border-radius: 25px;
            outline: none;
            transition: border-color 0.3s;
        }

        .search-bar:focus {
            border-color: #4CAF50;
        }

        .search-button {
            padding: 12px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .search-button:hover {
            background-color: #45a049;
        }

        .weather-info {
            position: absolute;
            bottom: 20px;
            left: 20px;
            background-color: #fff;
            padding: 10px;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            z-index: 1;
            text-align: center;
        }

        .weather-icon {
            width: 50px; /* Ajustez la taille de l'icône */
            height: 50px;
        }

        .suggestion-list {
            position: absolute;
            top: 60px;
            left: 20px;
            width: 300px;
            background-color: #fff;
            border: 2px solid #ccc;
            border-radius: 5px;
            padding: 5px;
            z-index: 2;
            display: none;
        }

        .suggestion-item {
            padding: 5px;
            cursor: pointer;
        }

        .suggestion-item:hover {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>

    <h1 style="text-align: center;">Weather Map</h1>

    <!-- Barre de recherche -->
    <div class="search-container">
        <input type="text" class="search-bar" id="search-bar" placeholder="Rechercher une ville" oninput="getSuggestions()">
        <button onclick="searchCity()" class="search-button">Rechercher</button>
        <div id="suggestion-list" class="suggestion-list"></div>
    </div>

    <!-- Informations météorologiques -->
    <div id="weather-info" class="weather-info"></div>

    <!-- Carte Google Maps -->
    <div id="map"></div>

    <!-- Script Google Maps -->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAsH7HxPLYvr6xID0U4j_DB0W_d3KJ35cM&libraries=places&callback=initMap" async defer></script>

    <script>
        var map;
        var weatherInfoWindow;
        var autocompleteService;
        var suggestionList = document.getElementById('suggestion-list');

        function initMap() {
            // Créer une carte Google Maps centrée sur une position par défaut
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 20, lng: 0 },
                zoom: 2
            });

            autocompleteService = new google.maps.places.AutocompleteService();

            // Ajouter un gestionnaire d'événements pour détecter les clics sur la carte
            map.addListener('click', function(event) {
                getWeather(event.latLng.lat(), event.latLng.lng());
            });
        }

        function getSuggestions() {
            var input = document.getElementById('search-bar').value;
            if (input.trim() === '') {
                suggestionList.style.display = 'none';
                return;
            }

            autocompleteService.getPlacePredictions({ input: input }, function(predictions, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    var suggestionsHTML = '';
                    predictions.forEach(function(prediction) {
                        suggestionsHTML += '<div class="suggestion-item" onclick="selectCity(\'' + prediction.description + '\')">' + prediction.description + '</div>';
                    });
                    suggestionList.innerHTML = suggestionsHTML;
                    suggestionList.style.display = 'block';
                } else {
                    suggestionList.style.display = 'none';
                }
            });
        }

        function selectCity(cityName) {
            document.getElementById('search-bar').value = cityName;
            suggestionList.style.display = 'none';
            searchCity();
        }

        function searchCity() {
            var cityName = document.getElementById('search-bar').value;

            if (cityName.trim() === 'MACAMAP') {
                window.location.href = 'https://youtu.be/svexj5f1lcA?si=HLG8e4TCP6rgRQRJ';
                return;
            }

            // Utiliser l'API Places pour obtenir les coordonnées de la ville
            var placesService = new google.maps.places.PlacesService(map);
            placesService.textSearch({ query: cityName }, function(results, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK && results[0]) {
                    var cityLocation = results[0].geometry.location;

                    // Centrer la carte sur la position de la ville
                    map.setCenter(cityLocation);
                    map.setZoom(10);

                    // Obtenir les données météorologiques de la ville
                    getWeather(cityLocation.lat(), cityLocation.lng());
                } else if (status === google.maps.places.PlacesServiceStatus.ZERO_RESULTS) {
                    alert("Aucun résultat trouvé pour la ville spécifiée.");
                } else {
                    alert("Une erreur s'est produite lors de la recherche de la ville. Veuillez réessayer.");
                }
            });
        }

        function getWeather(latitude, longitude) {
            // Remplacez 'YOUR_API_KEY' par votre clé d'API OpenWeatherMap
            var apiKey = 'ba95b1352e9467f155a0636c0fd4208c';

            // Construire l'URL de l'API OpenWeatherMap avec la langue française
            var apiUrl = 'https://api.openweathermap.org/data/2.5/weather?lat=' + latitude + '&lon=' + longitude + '&appid=' + apiKey + '&lang=fr';

            // Effectuer la requête HTTP
            fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    console.log('Réponse de l\'API OpenWeatherMap:', data);

                    // Convertir la température de Kelvin à Celsius
                    var temperatureCelsius = data.main.temp - 273.15;

                    // Afficher les informations météorologiques
                    showWeatherInfo(data.name, data.weather[0].description, temperatureCelsius.toFixed(2), data.weather[0].icon);
                })
                .catch(error => console.error('Erreur lors de la récupération des données météorologiques:', error));
        }

        function showWeatherInfo(cityName, weatherDescription, temperature, weatherIcon) {
            // Afficher les informations météorologiques dans la boîte d'informations
            document.getElementById('weather-info').innerHTML = `
                <h3>${cityName}</h3>
                <p>Météo actuelle: ${weatherDescription}</p>
                <p>Température: ${temperature} °C</p>
                <img src="http://openweathermap.org/img/wn/${weatherIcon}.png" alt="Weather Icon" class="weather-icon">
            `;
        }
    </script>

</body>
</html>

